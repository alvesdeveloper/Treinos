{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/painel/frases-mock.ts","webpack:///./src/app/painel/painel.component.css","webpack:///./src/app/painel/painel.component.html","webpack:///./src/app/painel/painel.component.ts","webpack:///./src/app/progresso/progresso.component.css","webpack:///./src/app/progresso/progresso.component.html","webpack:///./src/app/progresso/progresso.component.ts","webpack:///./src/app/shared/coracao.model.ts","webpack:///./src/app/tentativas/tentativas.component.css","webpack:///./src/app/tentativas/tentativas.component.html","webpack:///./src/app/tentativas/tentativas.component.ts","webpack:///./src/app/topo/topo.component.css","webpack:///./src/app/topo/topo.component.html","webpack:///./src/app/topo/topo.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"p {\\r\\n    font-size: 25px;\\r\\n    color: red;\\r\\n}\"","module.exports = \"<!--Instanciando o componente topo -->\\n<app-topo></app-topo>\\n\\n<!-- \\n    Abaixo na instancia do componente \\\"painel\\\", À ESQUERDA (encerrarJogo), estamos usando um property binding...\\n    para executar o metodo \\\"encerrar jogo\\\" do componente app (Compoenente PAI)..\\n    À DIREITA dizemos quando queremos executar este evento, com base no @Output feito do compoenente filho(Painel).\\n    Ou seja, À direita, quando o evento é disparado no componente filho(painel), ele avisa ao componente pai(app), À esquerda.\\n-->\\n<div *ngIf=\\\"jogoEmAndamento; else fimDeJogo \\\">\\n    <app-painel (encerrarJogo)=\\\"encerrarJogo($event)\\\"></app-painel>\\n</div>\\n\\n<!-- \\n    ng-template é uma diretiva que funciona como um template, porem sem o componente.\\n    #fimDeJogo é um apontamento feito no else da diretiva ngIf da div da instancia do componente painel..\\n    Ao encerrar o jogo o else executará a diretiva abaixo..    \\n-->\\n<ng-template #fimDeJogo>\\n    <div *ngIf=\\\"tipoEncerramento === 'derrota'; else fimDeJogoVitoria\\\" class=\\\"container\\\" style=\\\"margin-top: 50px\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <h3 style=\\\"color: red\\\">Fim de jogo, infelizmente você perdeu!</h3>\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"reiniciarJogo()\\\">Jogar novamente</button>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\\n<!-- O mesmo de cima, porém quando for vitória!-->\\n<ng-template #fimDeJogoVitoria>\\n        <div class=\\\"container\\\" style=\\\"margin-top: 50px\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <h3 style=\\\"color: green\\\">Fim de jogo, você ganhou!</h3>\\n                        <button class=\\\"btn btn-primary\\\" (click)=\\\"reiniciarJogo()\\\">Jogar novamente</button>\\n                    </div>\\n                </div>\\n            </div>   \\n</ng-template>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  public jogoEmAndamento: boolean = true\n  public tipoEncerramento: string\n \n  public encerrarJogo(tipo: string): void {\n    this.jogoEmAndamento = false\n    this.tipoEncerramento = tipo\n  }\n\n  public reiniciarJogo(): void { \n    this.jogoEmAndamento = true\n    this.tipoEncerramento = undefined\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { TopoComponent } from './topo/topo.component';\nimport { PainelComponent } from './painel/painel.component';\nimport { TentativasComponent } from './tentativas/tentativas.component';\nimport { ProgressoComponent } from './progresso/progresso.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopoComponent,\n    PainelComponent,\n    TentativasComponent,\n    ProgressoComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Frase} from '../shared/frase.model';\r\n\r\nexport const FRASES: Frase[] = [\r\n    { fraseEng: 'I like to learn', frasePtBr: 'Eu gosto de aprender' },\r\n    { fraseEng: 'I watch tv', frasePtBr: 'Eu assisto tv' },\r\n    { fraseEng: 'How are you', frasePtBr: 'Como vai você' },\r\n    { fraseEng: 'I eat bread', frasePtBr: 'Eu como pão' }\r\n];\r\n","module.exports = \".jumbotron{\\r\\n    margin-top: 20px;\\r\\n    padding-top: 30px;\\r\\n    padding-bottom: 30px;\\r\\n}\"","module.exports = \"\\n\\n\\n<div class=\\\"containser\\\">\\n    <div class=\\\"jumbotron\\\">\\n        \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6\\\">\\n                    <!-- \\n                        Dentro da instancia do componente \\\"progresso\\\" que está no template do componente \\\"Painel\\\", ..\\n                        vamos fazer uma co-relação do atributo progresso (do componente progresso), ..\\n                        com o atributo percentualConcluido (do componente painel), dessa forma conseguimos passar ..\\n                        o percentual concluido calculado no painel para o componente progresso, utilizando PROPERTY BINDING \\\"[]\\\" .\\n                        \\n                        obs.: Só conseguimos usar o atributo \\\"progresso\\\"(do compenente progresso)...\\n                              no template do componente \\\"painel\\\", porque dentro do componente progresso...\\n                              usamos a função decoradora @Input(permite receber parametros de entrada).\\n                    -->\\n                    <app-progresso [progresso]=\\\"percentualConcluido\\\"></app-progresso>\\n            </div>    \\n            <div class=\\\"col-sm-6\\\">\\n                <div class=\\\"d-flex justify-content-end\\\">\\n                    <app-tentativas [tentativas]=\\\"tentativas\\\"></app-tentativas>  \\n                </div>\\n            </div> \\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <h6>{{ instrucao }}</h6>\\n                <p>{{ rodadaFrase.fraseEng }}</p>\\n\\n                <div class=\\\"form-group\\\">\\n                    <!-- \\n                        (input)=\\\"atualizaResposta($event)\\\"  ==> aqui estamos utilizando \\\"Event Binding pra atualizar a variavel \\\"resposta\\\"\\n                        [value]=\\\"resposta\\\" ==> aqui estamos utilizando \\\"Property Binding pra pegar a \\\"reposta\\\" e inserir dentro do elemento textarea ..\\n                            ... dessa forma quando limparmos a variavel \\\"resposta\\\", atraves do \\\"verificar resposta()\\\", o valor do elemento também será limpo..\\n                    -->\\n                    <textarea \\n                        class=\\\"form-control\\\" \\n                        rows=\\\"3\\\"\\n                        (input)=\\\"atualizaResposta($event)\\\" \\n                        [value]=\\\"resposta\\\"\\n                    ></textarea>\\n                </div>                \\n            </div>   \\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <div class=\\\"d-flex justify-content-end\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"verificarResposta()\\\">Verificar</button>\\n                </div>                    \\n            </div>    \\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, EventEmitter, Output, OnDestroy } from '@angular/core';\n\nimport { Frase } from '../shared/frase.model';\nimport { FRASES } from './frases-mock';\n\n@Component({\n  selector: 'app-painel',\n  templateUrl: './painel.component.html',\n  styleUrls: ['./painel.component.css']\n})\nexport class PainelComponent implements OnInit, OnDestroy {\n\n  public frases: Frase[] = FRASES;\n  public instrucao: string = 'Traduza a frase:';\n  public resposta: string = '';\n  \n  public rodada: number = 0;\n  public rodadaFrase: Frase;\n\n  public percentualConcluido: number = 0;\n\n  public tentativas: number = 3\n\n  //o \"@Output\" faz o contrario do @input, ele torna o atributo exposto para o componente PAI, no caso aqui o pai é \"o app.component\"  \n  //         @Input  => O pai emite para o filho.\n  //         @Output => O filho emite para o pai.\n\n  // O \"EventEmitter\" faz uma emissão do evento..\n  @Output() public encerrarJogo: EventEmitter<string> = new EventEmitter()\n\n  constructor() {\n    this.atualizaRodada()\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n\n  }\n\n  public atualizaResposta(resposta: Event): void {\n    this.resposta = (<HTMLInputElement>resposta.target).value;\n  }\n\n  public verificarResposta(): void {\n    \n    if ( this.rodadaFrase.frasePtBr == this.resposta ) {\n\n      //trocar pergunta..\n      this.rodada++\n      \n      //Se chegou na rodada 4, ja concluiu tudo!\n      if(this.rodada === 4){\n        this.encerrarJogo.emit('vitória')\n      }\n\n      //progresso\n      this.percentualConcluido = this.percentualConcluido + (100 / this.frases.length)\n\n      //atualzia o bojeto rodadafrase\n      this.atualizaRodada()\n      \n    }else {\n      //diminuir a variavel tentativa\n      this.tentativas-- //decrementando\n\n      if (this.tentativas === -1) {\n        this.encerrarJogo.emit('derrota')\n      }\n    }\n\n  }\n\n  public atualizaRodada(): void {\n    this.rodadaFrase = this.frases[this.rodada]\n    this.resposta = \"\"\n  }\n\n\n}\n","module.exports = \".progress{\\r\\n    background: #EEF8DA;\\r\\n    border: 1px #99CE28\\r\\n}\\r\\n\\r\\n.progress-bar{\\r\\n    background: #99CE28\\r\\n}\"","module.exports = \"<div class=\\\"progress\\\">\\n    <div class=\\\"progress-bar w-{{ progresso }}\\\"></div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-progresso',\n  templateUrl: './progresso.component.html',\n  styleUrls: ['./progresso.component.css']\n})\nexport class ProgressoComponent implements OnInit {\n\n  //precisamos usar uma função decoradora para receber parametros de entrada... @Input\n  //Logo, poremos passar como parametro o atributo progresso do componente Progresso, dentro do template do componente Painel(Componente PAI)\n  @Input() public progresso: number = 0\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Coracao{\r\n    constructor(\r\n        public cheio: boolean,\r\n        public urlCoracaoCheio: string = '/assets/coracao_cheio.png',\r\n        public urlCoracaoVazio: string = '/assets/coracao_vazio.png'\r\n    ){}\r\n\r\n    public exibeCoracao(): string {\r\n        if (this.cheio){\r\n            return this.urlCoracaoCheio\r\n        } else {\r\n            return this.urlCoracaoVazio\r\n        }\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<!--\\n<img [src]=\\\"coracaoVazio\\\">\\n<img [src]=\\\"coracaoCheio\\\">\\n<img [src]=\\\"coracaoCheio\\\">\\n-->\\n\\n<!-- Estamos usando a diretiva ngfor para pecorrer o array coracoes e atraves do property binding passamos..\\n     o metodo que verifica o status de cada um -->\\n<img *ngFor=\\\"let i of coracoes\\\" [src]=\\\"i.exibeCoracao()\\\"/>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Coracao } from '../shared/coracao.model'\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { IfStmt } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-tentativas',\n  templateUrl: './tentativas.component.html',\n  styleUrls: ['./tentativas.component.css']\n})\nexport class TentativasComponent implements OnInit, OnChanges {\n \n  @Input() public tentativas: number;\n\n  public coracoes: Coracao[] = [\n    new Coracao(true), new Coracao(true), new Coracao(true)\n  ]\n  constructor() {\n  }\n\n  ngOnChanges() {\n    if (this.tentativas !== this.coracoes.length) {\n      let indice = this.coracoes.length - this.tentativas\n      this.coracoes[indice-1].cheio = false  \n    }\n  }\n\n  ngOnInit() {\n  }\n\n  \n}\n","module.exports = \".navbar {\\r\\n    background: #1CB0F6\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-faded\\\">\\r\\n    <span class=\\\"navbar-brand mb-0 h1\\\">{{ titulo }}</span>\\r\\n</nav>\"","import { Component } from '@angular/core';\r\n\r\n/*o decorator abaixo é que torna a classe abaixo um componente e encaminha pra classe alguns metadados*/\r\n/* conseguimos usar este decorator porque fizemos o import do modulo \"component\", acima*/\r\n@Component({\r\n    selector: 'app-topo', /*indica qual será o rotulo usado para instancia desse componente*/\r\n    templateUrl: './topo.component.html', /*indica qual o template que a classe abaixo controlará*/\r\n    styleUrls: ['./topo.component.css']\r\n})\r\n\r\nexport class TopoComponent {\r\n    public  titulo: string = 'Aprendendo Inglês';\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}